"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/search",{

/***/ "./lib/api.js":
/*!********************!*\
  !*** ./lib/api.js ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAllLocations: function() { return /* binding */ getAllLocations; },\n/* harmony export */   getLocationData: function() { return /* binding */ getLocationData; },\n/* harmony export */   getPosts: function() { return /* binding */ getPosts; }\n/* harmony export */ });\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./firebase */ \"./lib/firebase.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/firestore */ \"./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n\n\nasync function getPosts() {\n    const postsRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_0__.db, \"posts\");\n    const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDocs)(postsRef);\n    return snapshot.docs.map((doc)=>({\n            id: doc.id,\n            ...doc.data()\n        }));\n}\nasync function getLocationData(locationId) {\n    const response = await fetch(\"/api/locations/\".concat(locationId));\n    if (!response.ok) {\n        throw new Error(\"Failed to fetch location data\");\n    }\n    return response.json();\n}\nfunction calculateAverage(posts, field) {\n    const validPosts = posts.filter((post)=>post[field] !== undefined && post[field] !== null);\n    if (validPosts.length === 0) return null;\n    const sum = validPosts.reduce((acc, post)=>acc + post[field], 0);\n    return sum / validPosts.length;\n}\nasync function getAllLocations() {\n    try {\n        const locationsRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_0__.db, \"locations\");\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.query)(locationsRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.orderBy)(\"averageOverall\", \"desc\"));\n        const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDocs)(q);\n        // Fetch all posts to aggregate tags\n        const posts = await getPosts();\n        // Group posts by location name and collect unique types\n        const locationTagsMap = {};\n        posts.forEach((post)=>{\n            if (!post.locationName || !Array.isArray(post.types)) return;\n            if (!locationTagsMap[post.locationName]) locationTagsMap[post.locationName] = new Set();\n            post.types.forEach((type)=>locationTagsMap[post.locationName].add(type));\n        });\n        return snapshot.docs.map((doc)=>{\n            const name = doc.data().name;\n            // Find all tags for this location (by name)\n            const types = Array.from(locationTagsMap[name] || []);\n            return {\n                id: doc.id,\n                name,\n                totalPosts: doc.data().totalReviews,\n                overall: doc.data().averageOverall,\n                length: doc.data().averageLength,\n                thickness: doc.data().averageThickness,\n                crispiness: doc.data().averageCrispiness,\n                crunchiness: doc.data().averageCrunchiness,\n                saltiness: doc.data().averageSaltiness,\n                darkness: doc.data().averageDarkness,\n                types\n            };\n        });\n    } catch (error) {\n        console.error(\"Error fetching locations:\", error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RCxLQUFLLENBQUMsNkJBQTZCQTtRQUMzQyxNQUFNQTtJQUNSO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL2FwaS5qcz80NTQyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRiIH0gZnJvbSAnLi9maXJlYmFzZSc7XG5pbXBvcnQgeyBjb2xsZWN0aW9uLCBxdWVyeSwgd2hlcmUsIGdldERvY3MsIG9yZGVyQnkgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UG9zdHMoKSB7XG4gIGNvbnN0IHBvc3RzUmVmID0gY29sbGVjdGlvbihkYiwgJ3Bvc3RzJyk7XG4gIGNvbnN0IHNuYXBzaG90ID0gYXdhaXQgZ2V0RG9jcyhwb3N0c1JlZik7XG4gIHJldHVybiBzbmFwc2hvdC5kb2NzLm1hcChkb2MgPT4gKHtcbiAgICBpZDogZG9jLmlkLFxuICAgIC4uLmRvYy5kYXRhKClcbiAgfSkpO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TG9jYXRpb25EYXRhKGxvY2F0aW9uSWQpIHtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9sb2NhdGlvbnMvJHtsb2NhdGlvbklkfWApO1xuICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggbG9jYXRpb24gZGF0YScpO1xuICB9XG4gIHJldHVybiByZXNwb25zZS5qc29uKCk7XG59XG5cbmZ1bmN0aW9uIGNhbGN1bGF0ZUF2ZXJhZ2UocG9zdHMsIGZpZWxkKSB7XG4gIGNvbnN0IHZhbGlkUG9zdHMgPSBwb3N0cy5maWx0ZXIocG9zdCA9PiBwb3N0W2ZpZWxkXSAhPT0gdW5kZWZpbmVkICYmIHBvc3RbZmllbGRdICE9PSBudWxsKTtcbiAgaWYgKHZhbGlkUG9zdHMubGVuZ3RoID09PSAwKSByZXR1cm4gbnVsbDtcbiAgXG4gIGNvbnN0IHN1bSA9IHZhbGlkUG9zdHMucmVkdWNlKChhY2MsIHBvc3QpID0+IGFjYyArIHBvc3RbZmllbGRdLCAwKTtcbiAgcmV0dXJuIHN1bSAvIHZhbGlkUG9zdHMubGVuZ3RoO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsTG9jYXRpb25zKCkge1xuICB0cnkge1xuICAgIGNvbnN0IGxvY2F0aW9uc1JlZiA9IGNvbGxlY3Rpb24oZGIsICdsb2NhdGlvbnMnKTtcbiAgICBjb25zdCBxID0gcXVlcnkobG9jYXRpb25zUmVmLCBvcmRlckJ5KCdhdmVyYWdlT3ZlcmFsbCcsICdkZXNjJykpO1xuICAgIGNvbnN0IHNuYXBzaG90ID0gYXdhaXQgZ2V0RG9jcyhxKTtcblxuICAgIC8vIEZldGNoIGFsbCBwb3N0cyB0byBhZ2dyZWdhdGUgdGFnc1xuICAgIGNvbnN0IHBvc3RzID0gYXdhaXQgZ2V0UG9zdHMoKTtcbiAgICAvLyBHcm91cCBwb3N0cyBieSBsb2NhdGlvbiBuYW1lIGFuZCBjb2xsZWN0IHVuaXF1ZSB0eXBlc1xuICAgIGNvbnN0IGxvY2F0aW9uVGFnc01hcCA9IHt9O1xuICAgIHBvc3RzLmZvckVhY2gocG9zdCA9PiB7XG4gICAgICBpZiAoIXBvc3QubG9jYXRpb25OYW1lIHx8ICFBcnJheS5pc0FycmF5KHBvc3QudHlwZXMpKSByZXR1cm47XG4gICAgICBpZiAoIWxvY2F0aW9uVGFnc01hcFtwb3N0LmxvY2F0aW9uTmFtZV0pIGxvY2F0aW9uVGFnc01hcFtwb3N0LmxvY2F0aW9uTmFtZV0gPSBuZXcgU2V0KCk7XG4gICAgICBwb3N0LnR5cGVzLmZvckVhY2godHlwZSA9PiBsb2NhdGlvblRhZ3NNYXBbcG9zdC5sb2NhdGlvbk5hbWVdLmFkZCh0eXBlKSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gc25hcHNob3QuZG9jcy5tYXAoZG9jID0+IHtcbiAgICAgIGNvbnN0IG5hbWUgPSBkb2MuZGF0YSgpLm5hbWU7XG4gICAgICAvLyBGaW5kIGFsbCB0YWdzIGZvciB0aGlzIGxvY2F0aW9uIChieSBuYW1lKVxuICAgICAgY29uc3QgdHlwZXMgPSBBcnJheS5mcm9tKGxvY2F0aW9uVGFnc01hcFtuYW1lXSB8fCBbXSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBpZDogZG9jLmlkLFxuICAgICAgICBuYW1lLFxuICAgICAgICB0b3RhbFBvc3RzOiBkb2MuZGF0YSgpLnRvdGFsUmV2aWV3cyxcbiAgICAgICAgb3ZlcmFsbDogZG9jLmRhdGEoKS5hdmVyYWdlT3ZlcmFsbCxcbiAgICAgICAgbGVuZ3RoOiBkb2MuZGF0YSgpLmF2ZXJhZ2VMZW5ndGgsXG4gICAgICAgIHRoaWNrbmVzczogZG9jLmRhdGEoKS5hdmVyYWdlVGhpY2tuZXNzLFxuICAgICAgICBjcmlzcGluZXNzOiBkb2MuZGF0YSgpLmF2ZXJhZ2VDcmlzcGluZXNzLFxuICAgICAgICBjcnVuY2hpbmVzczogZG9jLmRhdGEoKS5hdmVyYWdlQ3J1bmNoaW5lc3MsXG4gICAgICAgIHNhbHRpbmVzczogZG9jLmRhdGEoKS5hdmVyYWdlU2FsdGluZXNzLFxuICAgICAgICBkYXJrbmVzczogZG9jLmRhdGEoKS5hdmVyYWdlRGFya25lc3MsXG4gICAgICAgIHR5cGVzLFxuICAgICAgfTtcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBsb2NhdGlvbnM6JywgZXJyb3IpO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59ICJdLCJuYW1lcyI6WyJkYiIsImNvbGxlY3Rpb24iLCJxdWVyeSIsIndoZXJlIiwiZ2V0RG9jcyIsIm9yZGVyQnkiLCJnZXRQb3N0cyIsInBvc3RzUmVmIiwic25hcHNob3QiLCJkb2NzIiwibWFwIiwiZG9jIiwiaWQiLCJkYXRhIiwiZ2V0TG9jYXRpb25EYXRhIiwibG9jYXRpb25JZCIsInJlc3BvbnNlIiwiZmV0Y2giLCJvayIsIkVycm9yIiwianNvbiIsImNhbGN1bGF0ZUF2ZXJhZ2UiLCJwb3N0cyIsImZpZWxkIiwidmFsaWRQb3N0cyIsImZpbHRlciIsInBvc3QiLCJ1bmRlZmluZWQiLCJsZW5ndGgiLCJzdW0iLCJyZWR1Y2UiLCJhY2MiLCJnZXRBbGxMb2NhdGlvbnMiLCJsb2NhdGlvbnNSZWYiLCJxIiwibG9jYXRpb25UYWdzTWFwIiwiZm9yRWFjaCIsImxvY2F0aW9uTmFtZSIsIkFycmF5IiwiaXNBcnJheSIsInR5cGVzIiwiU2V0IiwidHlwZSIsImFkZCIsIm5hbWUiLCJmcm9tIiwidG90YWxQb3N0cyIsInRvdGFsUmV2aWV3cyIsIm92ZXJhbGwiLCJhdmVyYWdlT3ZlcmFsbCIsImF2ZXJhZ2VMZW5ndGgiLCJ0aGlja25lc3MiLCJhdmVyYWdlVGhpY2tuZXNzIiwiY3Jpc3BpbmVzcyIsImF2ZXJhZ2VDcmlzcGluZXNzIiwiY3J1bmNoaW5lc3MiLCJhdmVyYWdlQ3J1bmNoaW5lc3MiLCJzYWx0aW5lc3MiLCJhdmVyYWdlU2FsdGluZXNzIiwiZGFya25lc3MiLCJhdmVyYWdlRGFya25lc3MiLCJlcnJvciIsImNvbnNvbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/api.js\n"));

/***/ })

});