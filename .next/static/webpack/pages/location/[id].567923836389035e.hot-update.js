"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/location/[id]",{

/***/ "./lib/api.js":
/*!********************!*\
  !*** ./lib/api.js ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLocationData: function() { return /* binding */ getLocationData; },\n/* harmony export */   getPosts: function() { return /* binding */ getPosts; }\n/* harmony export */ });\n// Mock data for development\nconst mockPosts = [\n    {\n        id: \"1\",\n        locationName: \"Thai Diner, New York\",\n        menuName: \"Pad Thai\",\n        overall: 4,\n        length: 3,\n        thickness: 4,\n        crispiness: 5,\n        crunchiness: 4,\n        saltiness: 3,\n        darkness: 4,\n        description: \"Amazing pad thai with perfect balance of flavors\",\n        imageUrl: \"/images/thai-diner.jpg\",\n        createdAt: \"2024-03-20T12:00:00Z\",\n        types: [\n            \"thai\",\n            \"noodles\"\n        ]\n    }\n];\nasync function getPosts() {\n    // In a real app, this would fetch from your database\n    return mockPosts;\n}\nasync function getLocationData(locationId) {\n    const response = await fetch(\"/api/locations/\".concat(locationId));\n    if (!response.ok) {\n        throw new Error(\"Failed to fetch location data\");\n    }\n    return response.json();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvYXBpLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsNEJBQTRCO0FBQzVCLE1BQU1BLFlBQVk7SUFDaEI7UUFDRUMsSUFBSTtRQUNKQyxjQUFjO1FBQ2RDLFVBQVU7UUFDVkMsU0FBUztRQUNUQyxRQUFRO1FBQ1JDLFdBQVc7UUFDWEMsWUFBWTtRQUNaQyxhQUFhO1FBQ2JDLFdBQVc7UUFDWEMsVUFBVTtRQUNWQyxhQUFhO1FBQ2JDLFVBQVU7UUFDVkMsV0FBVztRQUNYQyxPQUFPO1lBQUM7WUFBUTtTQUFVO0lBQzVCO0NBRUQ7QUFFTSxlQUFlQztJQUNwQixxREFBcUQ7SUFDckQsT0FBT2Y7QUFDVDtBQUVPLGVBQWVnQixnQkFBZ0JDLFVBQVU7SUFDOUMsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLGtCQUE2QixPQUFYRjtJQUMvQyxJQUFJLENBQUNDLFNBQVNFLEVBQUUsRUFBRTtRQUNoQixNQUFNLElBQUlDLE1BQU07SUFDbEI7SUFDQSxPQUFPSCxTQUFTSSxJQUFJO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi9hcGkuanM/NDU0MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNb2NrIGRhdGEgZm9yIGRldmVsb3BtZW50XG5jb25zdCBtb2NrUG9zdHMgPSBbXG4gIHtcbiAgICBpZDogJzEnLFxuICAgIGxvY2F0aW9uTmFtZTogJ1RoYWkgRGluZXIsIE5ldyBZb3JrJyxcbiAgICBtZW51TmFtZTogJ1BhZCBUaGFpJyxcbiAgICBvdmVyYWxsOiA0LFxuICAgIGxlbmd0aDogMyxcbiAgICB0aGlja25lc3M6IDQsXG4gICAgY3Jpc3BpbmVzczogNSxcbiAgICBjcnVuY2hpbmVzczogNCxcbiAgICBzYWx0aW5lc3M6IDMsXG4gICAgZGFya25lc3M6IDQsXG4gICAgZGVzY3JpcHRpb246ICdBbWF6aW5nIHBhZCB0aGFpIHdpdGggcGVyZmVjdCBiYWxhbmNlIG9mIGZsYXZvcnMnLFxuICAgIGltYWdlVXJsOiAnL2ltYWdlcy90aGFpLWRpbmVyLmpwZycsXG4gICAgY3JlYXRlZEF0OiAnMjAyNC0wMy0yMFQxMjowMDowMFonLFxuICAgIHR5cGVzOiBbJ3RoYWknLCAnbm9vZGxlcyddXG4gIH0sXG4gIC8vIEFkZCBtb3JlIG1vY2sgcG9zdHMgYXMgbmVlZGVkXG5dO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UG9zdHMoKSB7XG4gIC8vIEluIGEgcmVhbCBhcHAsIHRoaXMgd291bGQgZmV0Y2ggZnJvbSB5b3VyIGRhdGFiYXNlXG4gIHJldHVybiBtb2NrUG9zdHM7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRMb2NhdGlvbkRhdGEobG9jYXRpb25JZCkge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAvYXBpL2xvY2F0aW9ucy8ke2xvY2F0aW9uSWR9YCk7XG4gIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBsb2NhdGlvbiBkYXRhJyk7XG4gIH1cbiAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbn0gIl0sIm5hbWVzIjpbIm1vY2tQb3N0cyIsImlkIiwibG9jYXRpb25OYW1lIiwibWVudU5hbWUiLCJvdmVyYWxsIiwibGVuZ3RoIiwidGhpY2tuZXNzIiwiY3Jpc3BpbmVzcyIsImNydW5jaGluZXNzIiwic2FsdGluZXNzIiwiZGFya25lc3MiLCJkZXNjcmlwdGlvbiIsImltYWdlVXJsIiwiY3JlYXRlZEF0IiwidHlwZXMiLCJnZXRQb3N0cyIsImdldExvY2F0aW9uRGF0YSIsImxvY2F0aW9uSWQiLCJyZXNwb25zZSIsImZldGNoIiwib2siLCJFcnJvciIsImpzb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/api.js\n"));

/***/ })

});